//THIS FILE IS AUTOGENERATED, DO NOT EDIT
use worker::{Context, Env, Request, Response, Result};

#[path = "pages"]
pub mod pages {
    pub mod test;
    pub mod nested {
        pub mod dsa;
    }
}

pub async fn router(req: Request, env: Env, ctx: Context) -> Result<Response> {
    let path = req.url()?;
    let path = path.path();
    let path = path.split("/").collect::<Vec<&str>>();

    let route = path.get(1);
    if route == Some(&"route1") && path.len() == 2 {
        return pages::test::route1(req, env, ctx).await;
    }
    if route == Some(&"nested") {
        let route = path.get(2);
        if route == None {
            return pages::nested::dsa::hw_empty(req, env, ctx).await;
        }
        if route == Some(&"siem") && path.len() == 3 {
            return pages::nested::dsa::siema(req, env, ctx).await;
        }
    }

    Ok(Response::ok("404 not found")?.with_status(404))
}
